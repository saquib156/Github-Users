{"version":3,"sources":["components/Home.jsx","components/UserDetails.jsx","App.js","reportWebVitals.js","index.js"],"names":["Home","useState","searchUser","setSearchUser","storeData","setStoreData","githubUsers","useEffect","gitUsers","gitUsersList","usersList","localStorage","getItem","JSON","parse","fetchUserData","a","fetch","then","res","json","push","setItem","stringify","className","type","value","onChange","e","user","target","onClick","map","to","id","src","avatar_url","width","height","alt","name","login","UserDetails","App","path","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oQAgEeA,EA7DF,WAET,MAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAEA,EAAkCF,mBAAS,IAA3C,mBAAOG,EAAP,KAAkBC,EAAlB,KAEIC,EAAc,GAElBC,qBAAU,WACN,IAAMC,EAAWC,IACjBJ,EAAaG,KACd,IAEH,IAAMC,EAAe,WACjB,IAAIC,EAAYC,aAAaC,QAAQ,QAIrC,OAHiB,OAAdF,IACCJ,EAAcO,KAAKC,MAAMJ,IAEtBJ,GAOLS,EAAa,uCAAG,8BAAAC,EAAA,6DACZR,EAAWC,IADC,SAGAQ,MAAM,gCAAD,OACWf,IAChCgB,MAAK,SAACC,GAAD,OAASA,EAAIC,UALF,OAGZD,EAHY,OAOlBX,EAASa,KAAKF,GACdR,aAAaW,QAAQ,OAAQT,KAAKU,UAAUf,IAE5CH,EAAaG,GAVK,2CAAH,qDAanB,OACI,qCACI,sBAAKgB,UAAU,SAAf,UACI,uBAAOC,KAAK,OAAOD,UAAU,eAAeE,MAAOxB,EAAYyB,SAAU,SAACC,GAAD,OApB3DC,EAoBmFD,EAAEE,OAAOJ,WAnBlHvB,EAAc0B,GADO,IAACA,KAqBd,wBAAQJ,KAAK,SAASD,UAAU,aAAaO,QAAS,kBAAMhB,KAA5D,uBAGJ,oBAAIS,UAAU,YAAd,4BAEA,qBAAKA,UAAU,YAAf,SACKpB,EAAU4B,KAAI,SAACH,GAAD,OACX,cAAC,IAAD,CAAMI,GAAE,WAAMJ,EAAKK,IAAnB,SACI,sBAAKV,UAAU,aAAf,UACI,qBAAKW,IAAKN,EAAKO,WAAYC,MAAM,MAAMC,OAAO,MAAMC,IAAI,gBACxD,qBAAKf,UAAU,aAAf,SAA6BK,EAAKW,KAAOX,EAAKW,KAAOX,EAAKY,YAHpCZ,EAAKK,aC7CxCQ,EALK,WAEhB,OAAO,+C,OCcIC,MAbf,WACE,OACE,cAAC,IAAD,UACE,qBAAKnB,UAAU,MAAf,SACE,eAAC,IAAD,WACE,cAAC,EAAD,IACA,cAAC,IAAD,CAAOoB,KAAK,OAAOC,UAAWH,YCCzBI,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqB9B,MAAK,YAAkD,IAA/C+B,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.cde1fb06.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst Home = () => {\r\n\r\n    const [searchUser, setSearchUser] = useState(\"\");\r\n\r\n    const [storeData, setStoreData] = useState([]);\r\n\r\n    let githubUsers = [];\r\n\r\n    useEffect(() => {\r\n        const gitUsers = gitUsersList();\r\n        setStoreData(gitUsers);\r\n    }, []);\r\n\r\n    const gitUsersList = () => {\r\n        let usersList = localStorage.getItem(\"data\");\r\n        if(usersList !== null){\r\n            githubUsers = JSON.parse(usersList);\r\n        }\r\n        return githubUsers;\r\n    }\r\n\r\n    const handleSearchUser = (user) => {\r\n        setSearchUser(user);\r\n    }\r\n\r\n    const fetchUserData = async () => {\r\n        const gitUsers = gitUsersList();\r\n\r\n        const res = await fetch(\r\n          `https://api.github.com/users/${searchUser}`\r\n        ).then((res) => res.json());\r\n        \r\n        gitUsers.push(res);\r\n        localStorage.setItem(\"data\", JSON.stringify(gitUsers));\r\n\r\n        setStoreData(gitUsers);\r\n      };\r\n\r\n    return (\r\n        <>  \r\n            <div className=\"header\">\r\n                <input type=\"text\" className=\"search-input\" value={searchUser} onChange={(e) => handleSearchUser(e.target.value)} />\r\n                <button type=\"button\" className=\"search-btn\" onClick={() => fetchUserData()}>Search</button>\r\n            </div>\r\n\r\n            <h2 className=\"user-head\">Searched Users</h2>\r\n\r\n            <div className=\"users-div\">\r\n                {storeData.map((user) => (\r\n                    <Link to={`/${user.id}`} key={user.id}>\r\n                        <div className=\"user-block\">\r\n                            <img src={user.avatar_url} width=\"300\" height=\"300\" alt=\"Profile Pic\" />\r\n                            <div className=\"user-title\">{user.name ? user.name : user.login}</div>\r\n                        </div>\r\n                    </Link>\r\n                ))}\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Home;","import React from 'react';\r\n\r\nconst UserDetails = () => {\r\n    \r\n    return <h2>User Details</h2>\r\n};\r\n\r\nexport default UserDetails;","import './App.css';\nimport Home from './components/Home';\nimport UserDetails from './components/UserDetails';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\n\nfunction App() {\n  return (\n    <Router>\n      <div className=\"App\">\n        <Switch>\n          <Home />\n          <Route path=\"/:id\" component={UserDetails} />\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}